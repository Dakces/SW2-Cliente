{"version":3,"sources":["components/Navbar.js","components/House.js","pages/home.js","components/Room.js","pages/house.js","pages/login.js","App.js","serviceWorker.js","index.js"],"names":["Component","House","this","props","classes","house","houseId","address","ownerNickname","createdAt","roomCount","alias","houseImage","to","Card","CardActionArea","CardMedia","component","image","alt","height","title","CardContent","Typography","gutterBottom","variant","color","withStyles","card","display","home","state","houses","axios","get","then","res","console","log","data","setState","catch","err","recentHousesMarkup","map","Grid","item","xs","style","marginTop","container","spacing","justify","Room","room","roomId","roomImage","match","params","rooms","login","App","className","exact","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e92812b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Link from \"react-router-dom/Link\";\n\n//Material UI Imports\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <AppBar>\n        <Toolbar>\n          {/* <Button color=\"inherit\" component={Link} to=\"/login\">\n            Login\n          </Button>\n          <Button color=\"inherit\" component={Link} to=\"/\">\n            Home\n          </Button>\n          <Button color=\"inherit\" component={Link} to=\"/signup\">\n            Signup\n          </Button> */}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//Material UI Imports\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = {\n  card: {\n    display: \"flex\"\n  }\n};\n\nclass House extends Component {\n  render() {\n    const {\n      classes,\n      house: {\n        houseId,\n        ownerNickname,\n        createdAt,\n        roomCount,\n        address,\n        alias,\n        houseImage\n      }\n    } = this.props;\n    return (\n      <Link to={`/houses/${houseId}`}>\n        <Card>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              image={houseImage}\n              alt={alias}\n              height=\"140\"\n              title={alias}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {alias}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {address}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Link>\n    );\n  }\n}\n\nexport default withStyles(styles)(House);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport House from \"../components/House\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nclass home extends Component {\n  state = {\n    houses: null\n  };\n  componentDidMount() {\n    axios\n      .get(\"/houses\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          houses: res.data.data\n        });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    let recentHousesMarkup = this.state.houses ? (\n      this.state.houses.map(house => (\n        <Grid item xs={3}>\n          <House house={house} />\n        </Grid>\n      ))\n    ) : (\n      <p>Loading ...</p>\n    );\n\n    return (\n      <div>\n        <Typography\n          gutterBottom\n          variant=\"h4\"\n          component=\"h3\"\n          style={{ marginTop: 10 }}\n        >\n          Seleccione uno de sus hogares:\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid container justify=\"center\" item xs={12} spacing={3}>\n            {recentHousesMarkup}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default home;\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//Material UI Imports\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = {\n  card: {\n    display: \"flex\"\n  }\n};\n\nclass Room extends Component {\n  render() {\n    const {\n      classes,\n      room: { alias, createdAt, houseId, roomId, roomImage }\n    } = this.props;\n    return (\n      <Link to={`/room/${roomId}`}>\n        <Card>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              image={roomImage}\n              alt={alias}\n              height=\"140\"\n              title={alias}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {alias}\n              </Typography>\n              {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {address}\n              </Typography> */}\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Link>\n    );\n  }\n}\n\nexport default withStyles(styles)(Room);\n","import React, { Component } from \"react\";\nimport Link from \"react-router-dom/Link\";\nimport axios from \"axios\";\nimport Room from \"../components/Room\";\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nclass house extends Component {\n  state = {\n    house: null\n  };\n\n  componentDidMount() {\n    const houseId = this.props.match.params.houseId;\n\n    axios\n      .get(`/houses/${houseId}`)\n      .then(res => {\n        console.log(res.data.data);\n        this.setState({\n          house: res.data.data\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    let rooms = this.state.house ? (\n      this.state.house.rooms.map(room => (\n        <Grid item xs={3}>\n          <Room house={this.state.house} room={room} />\n        </Grid>\n      ))\n    ) : (\n      <p>Loading ...</p>\n    );\n\n    return (\n      <div>\n        <Typography\n          gutterBottom\n          variant=\"h4\"\n          component=\"h3\"\n          style={{ marginTop: 10 }}\n        >\n          Seleccione una de sus habitaciones:\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid container justify=\"center\" item xs={12} spacing={3}>\n            {rooms}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default house;\n","import React, { Component } from 'react'\n\nclass login extends Component {\n    render() {\n        console.log(\"hola\")\n        return (\n            <div>\n                <h1>Login Page</h1>\n            </div>\n        );\n    }\n}\n\nexport default login\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\n//Components\nimport Navbar from \"./components/Navbar\";\n\n//Pages\nimport home from \"./pages/home\";\nimport house from \"./pages/house\";\nimport room from \"./pages/login\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          {/* <Navbar /> */}\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={home} />\n              <Route exact path=\"/houses/:houseId\" component={house} />\n              <Route exact path=\"/rooms/:roomId\" component={room} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}